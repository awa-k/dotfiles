# zsh configuration for Mac OSX
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:${HOME}/bin
export ZSH_FUNCTIONS=/usr/local/share/zsh/site-functions

# pager
export PAGER=/usr/local/bin/lv
export LV='-c -Ou8'

# ls
export LSCOLORS=Gxfxcxdxbxegedabagacad
alias ls='ls -G'

# macvim
export EDITOR=/Applications/MacVim.app/Contents/MacOS/Vim
alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias vimdiff='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/vimdiff "$@"'
alias ctags='/Applications/MacVim.app/Contents/MacOS/ctags "$@"'

# java
export JAVA_HOME=`/usr/libexec/java_home`

# homebrew
#[ -f ${ZSH_FUNCTIONS}/_brew ] && \
#    source ${ZSH_FUNCTIONS}/_brew

# git
#[ -f ${ZSH_FUNCTIONS}/_git ] && \
#    source ${ZSH_FUNCTIONS}/_git

# awscli
[ -f ${ZSH_FUNCTIONS}/_aws ] && \
    source ${ZSH_FUNCTIONS}/_aws

# PATH for the Google Cloud SDK, update manualliy
export PATH=${PATH}:${HOME}/google-cloud-sdk/bin

# The next line enables shell command completion for gcloud.
[ -f ${HOME}/google-cloud-sdk/completion.zsh.inc ] && \
    source ${HOME}/google-cloud-sdk/completion.zsh.inc

# direnv
if which direnv > /dev/null; then eval "$(direnv hook zsh)"; fi

# pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# golang
export GOPATH=${HOME}/codes/go
export PATH=${PATH}:${GOPATH}/bin

# custom function
function chpwd() { ls }
zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'

# search by chrome
google () {
    local str opt
    if [ $# != 0 ]; then
        for i in $*; do
        str="$str${str:++}$i"
        done
        opt='search?num=100'
        opt="${opt}&q=${str}"
    fi
    open -a Google\ Chrome http://www.google.co.jp/$opt
}

# thefuck
alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'

export XDG_CONFIG_HOME=${HOME}/.config
